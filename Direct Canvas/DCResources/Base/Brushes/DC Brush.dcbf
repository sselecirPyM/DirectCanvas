<?xml version="1.0" encoding="utf-8"?>
<Brush>
<!--
Texture2D<float4> RefTexture1
Texture2D<float4> RefTexture2
struct InputInfo
{
	uint FrameId;
	uint PointerId;
	uint2 Timestamp;
	float4 Position;
	float2 XYTilt;
	float Twist;
	float Pressure;
	float Orientation;
	float ZDistance;
	float2 InputInfoPreserverd;
};
cbuffer BrushData
{
	float4 BrushColor;
	float4 BrushColor2;
	float4 BrushColor3;
	float4 BrushColor4;
	float BrushSize;
	float3 BrushDataPreserved;
	InputInfo InputDatas[16];
	int4 Parameters[8];
};
-->
  <Name>画笔（硬）</Name>
  <Description></Description>
  <Parameters>
    <Parameter Name="hard_soft" Type="Slider" MaxValue="100" MinValue="0">
      <Description>画笔边缘的软硬程度。100为软画笔。</Description>
    </Parameter>
  </Parameters>
  <Code>

float4 StandardBrush(float4 bufferColor, uint2 position, float4 color,float hs)
{
	float2 mp = InputDatas[0].Position.xy - InputDatas[1].Position.xy;
	float mrad = atan2(mp.y, mp.x);
	float4x4 transform9 =
	{
		cos(mrad),-sin(mrad),0.0f,0.0f,
		sin(mrad),cos(mrad),0.0f,0.0f,
		0.0f,0.0f,1.0f,0.0f,
		0.0f,0.0f,0.0f,1.0f
	};
	float4 rPos = mul(float4(position + float2(0.5f, 0.5f) - InputDatas[1].Position.xy, 0, 1), transform9);
	float rSize = BrushSize * InputDatas[0].Pressure;
	float rl = sqrt(saturate(1 - (rPos.y / rSize)*(rPos.y / rSize)));
	float rl2 = rl * rSize;
	float rDistance = (1 - saturate((-rPos.x + rl2) / rl2 * 0.5f) - saturate((rPos.x - length(mp) + rl2) / rl2 * 0.5f));
	color.a = (1 - pow(2.718281828f, (rl*hs + 1.0f - hs)*log(1.0f - color.a*0.99999f)*rDistance));

	if (abs(rPos.y) &lt;= rSize &amp;&amp; rPos.x &gt;= 0 &amp;&amp; rPos.x &lt;= length(mp) || distance(rPos, float2(0, 0))&lt;= rSize || distance(rPos, float2(length(mp), 0)) &lt;= rSize)
	{
		if (color.a &gt; 0.00000001f)
		{
			float aalpha = 1 - (1 - bufferColor.a)*(1 - color.a);
			color = float4(bufferColor.rgb*(1 - color.a)*(bufferColor.a) / aalpha + color.rgb*color.a / aalpha, aalpha);
		}
		else
		{
			color = bufferColor;
		}
	}
	else
	{
		color = bufferColor;
	}
	return color;
}

float4 brush(float4 bufferColor, uint2 position)
{
	float4 color = BrushColor;
	//return StandardBrush(bufferColor,position,color,Parameters[3].w*0.01f);
	return StandardBrush(bufferColor,position,color,P_hard_soft*0.01f);
}
  </Code>
</Brush>