<?xml version="1.0" encoding="utf-8"?>
<Brush>
  <Parameter Index="0">
    <Name>边长</Name>
    <Description>六边形的边长</Description>
  </Parameter>
  <Parameter Index="1">
    <Name>间隙</Name>
    <Description>间隙的宽度。</Description>
  </Parameter>
  <Parameter Index="4" Type="fTextBox">
    <Name>旋转角</Name>
    <Description>旋转的角度</Description>
  </Parameter>
  <Parameter Index="6" Type="fTextBox">
    <Name>偏移X</Name>
    <Description></Description>
  </Parameter>
  <Parameter Index="7" Type="fTextBox">
    <Name>偏移Y</Name>
    <Description></Description>
  </Parameter>
  <Parameter Index="15" Type="Slider" MaxValue="100" MinValue="0">
    <Name>硬/软 画笔</Name>
    <Description>画笔边缘的软硬程度。100为软画笔。</Description>
  </Parameter>
  <ParametersGroup Image="DC Hive1.png" Parameter1="30" Parameter2="10">
    <Name>Pattern-Hive1</Name>
    <Description></Description>
    <Name Culture="zh-cn">图案-蜂巢1</Name>
    <Description Culture="zh-cn"></Description>
  </ParametersGroup>
  <Code Stage="Begin">
float4 brush(float4 bufferColor, uint2 position)
{
	return bufferColor;
}
  </Code>
  <Code Stage="Doing">
float4 brush(float4 bufferColor, uint2 position)
{
	float4 color = BrushColor;
	float2 m0 = float2(Parameters[0].x*1.7320508f,Parameters[0].x*3.0f);
	float2 m1 = m0*0.5f;
	float4 xr;
	float4x4 transform0=
	{
		-0.5f,0.86602540f,0.0f,0.0f,
		-0.86602540f,-0.5f,0.0f,0.0f,
		0.0f,0.0f,1.0f,0.0f,
		0.0f,0.0f,0.0f,1.0f
	};
	float4x4 transform1=
	{
		-0.5f,-0.86602540f,0.0f,0.0f,
		0.86602540f,-0.5f,0.0f,0.0f,
		0.0f,0.0f,1.0f,0.0f,
		0.0f,0.0f,0.0f,1.0f
	};
	float rad = asfloat(Parameters[1].x)*0.017453292f;
	float4x4 transform2=
	{
		cos(rad),-sin(rad),0.0f,0.0f,
		sin(rad),cos(rad),0.0f,0.0f,
		0.0f,0.0f,1.0f,0.0f,
		0.0f,0.0f,0.0f,1.0f
	};
	float2 xPos=mul(position-asfloat(Parameters[1].zw),transform2).xy;
	float2 ingrid = (xPos%m0+m0)%m0-m1;
	if(abs(ingrid.x*2.0f) &lt;= Parameters[0].y &amp;&amp; ingrid.y &lt;= Parameters[0].x &amp;&amp; ingrid.y &gt;= 0)
	{
		color = BrushColor2;
	}
	xr = mul(float4(ingrid,0,1),transform0);
	if(abs(xr.x*2.0f) &lt;= Parameters[0].y &amp;&amp; xr.y &lt;= Parameters[0].x &amp;&amp; xr.y &gt;= 0)
	{
		color = BrushColor2;
	}
	xr = mul(float4(ingrid,0,1),transform1);
	if(abs(xr.x*2.0f) &lt;= Parameters[0].y &amp;&amp; xr.y &lt;= Parameters[0].x &amp;&amp; xr.y &gt;= 0)
	{
		color = BrushColor2;
	}
	ingrid = ((xPos+m1)%m0+m0)%m0-m1;
	if(abs(ingrid.x*2.0f) &lt;= Parameters[0].y &amp;&amp; ingrid.y &lt;= Parameters[0].x &amp;&amp; ingrid.y &gt;= 0)
	{
		color = BrushColor2;
	}
	xr = mul(float4(ingrid,0,1),transform0);
	if(abs(xr.x*2.0f) &lt;= Parameters[0].y &amp;&amp; xr.y &lt;= Parameters[0].x &amp;&amp; xr.y &gt;= 0)
	{
		color = BrushColor2;
	}
	xr = mul(float4(ingrid,0,1),transform1);
	if(abs(xr.x*2.0f) &lt;= Parameters[0].y &amp;&amp; xr.y &lt;= Parameters[0].x &amp;&amp; xr.y &gt;= 0)
	{
		color = BrushColor2;
	}
	return StandardBrush(bufferColor,position,color,Parameters[3].w*0.01f);
}
  </Code>
  <Code Stage="End">
float4 brush(float4 bufferColor, uint2 position)
{
	float4 color = BrushColor;
	float2 m0 = float2(Parameters[0].x*1.7320508f,Parameters[0].x*3.0f);
	float2 m1 = m0*0.5f;
	float4 xr;
	float4x4 transform0=
	{
		-0.5f,0.86602540f,0.0f,0.0f,
		-0.86602540f,-0.5f,0.0f,0.0f,
		0.0f,0.0f,1.0f,0.0f,
		0.0f,0.0f,0.0f,1.0f
	};
	float4x4 transform1=
	{
		-0.5f,-0.86602540f,0.0f,0.0f,
		0.86602540f,-0.5f,0.0f,0.0f,
		0.0f,0.0f,1.0f,0.0f,
		0.0f,0.0f,0.0f,1.0f
	};
	float rad = asfloat(Parameters[1].x)*0.017453292f;
	float4x4 transform2=
	{
		cos(rad),-sin(rad),0.0f,0.0f,
		sin(rad),cos(rad),0.0f,0.0f,
		0.0f,0.0f,1.0f,0.0f,
		0.0f,0.0f,0.0f,1.0f
	};
	float2 xPos=mul(position-asfloat(Parameters[1].zw),transform2).xy;
	float2 ingrid = (xPos%m0+m0)%m0-m1;
	if(abs(ingrid.x*2.0f) &lt;= Parameters[0].y &amp;&amp; ingrid.y &lt;= Parameters[0].x &amp;&amp; ingrid.y &gt;= 0)
	{
		color = BrushColor2;
	}
	xr = mul(float4(ingrid,0,1),transform0);
	if(abs(xr.x*2.0f) &lt;= Parameters[0].y &amp;&amp; xr.y &lt;= Parameters[0].x &amp;&amp; xr.y &gt;= 0)
	{
		color = BrushColor2;
	}
	xr = mul(float4(ingrid,0,1),transform1);
	if(abs(xr.x*2.0f) &lt;= Parameters[0].y &amp;&amp; xr.y &lt;= Parameters[0].x &amp;&amp; xr.y &gt;= 0)
	{
		color = BrushColor2;
	}
	ingrid = ((xPos+m1)%m0+m0)%m0-m1;
	if(abs(ingrid.x*2.0f) &lt;= Parameters[0].y &amp;&amp; ingrid.y &lt;= Parameters[0].x &amp;&amp; ingrid.y &gt;= 0)
	{
		color = BrushColor2;
	}
	xr = mul(float4(ingrid,0,1),transform0);
	if(abs(xr.x*2.0f) &lt;= Parameters[0].y &amp;&amp; xr.y &lt;= Parameters[0].x &amp;&amp; xr.y &gt;= 0)
	{
		color = BrushColor2;
	}
	xr = mul(float4(ingrid,0,1),transform1);
	if(abs(xr.x*2.0f) &lt;= Parameters[0].y &amp;&amp; xr.y &lt;= Parameters[0].x &amp;&amp; xr.y &gt;= 0)
	{
		color = BrushColor2;
	}
	return StandardBrush(bufferColor,position,color,Parameters[3].w*0.01f);
}
  </Code>
</Brush>